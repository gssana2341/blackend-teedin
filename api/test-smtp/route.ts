import { testEmailConnection } from "@/lib/email";
import { NextResponse } from "next/server";

export async function GET() {
  try {
    console.log("üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ SMTP...");

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö environment variables
    const requiredVars = ["SMTP_HOST", "SMTP_PORT", "SMTP_USER", "SMTP_PASS"];
    const missingVars = requiredVars.filter(varName => !process.env[varName]);

    if (missingVars.length > 0) {
      return NextResponse.json(
        {
          success: false,
          error: `‡∏Ç‡∏≤‡∏î environment variables: ${missingVars.join(", ")}`,
          instructions:
            "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ SMTP credentials ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå .env.local ‡∏ï‡∏≤‡∏° GMAIL_SMTP_SETUP.md",
        },
        { status: 400 }
      );
    }

    console.log("üìß SMTP Configuration:");
    console.log(`- Host: ${process.env.SMTP_HOST}`);
    console.log(`- Port: ${process.env.SMTP_PORT}`);
    console.log(`- User: ${process.env.SMTP_USER}`);
    console.log(
      `- Pass: ${process.env.SMTP_PASS ? "***‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß***" : "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤"}`
    );

    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
    const isConnected = await testEmailConnection();

    if (isConnected) {
      return NextResponse.json({
        success: true,
        message: "‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ SMTP ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß",
        config: {
          host: process.env.SMTP_HOST,
          port: process.env.SMTP_PORT,
          user: process.env.SMTP_USER,
          secure: process.env.SMTP_SECURE,
        },
      });
    } else {
      return NextResponse.json(
        {
          success: false,
          error: "‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ SMTP ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß",
          instructions:
            "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö SMTP credentials ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏ï‡∏≤‡∏° GMAIL_SMTP_SETUP.md",
        },
        { status: 500 }
      );
    }
  } catch (error: unknown) {
    console.error(
      "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö SMTP:",
      error instanceof Error ? error.message : error
    );
    return NextResponse.json(
      {
        success: false,
        error: `‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${
          error instanceof Error ? error.message : "Unknown error"
        }`,
        instructions: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö SMTP configuration",
      },
      { status: 500 }
    );
  }
}
