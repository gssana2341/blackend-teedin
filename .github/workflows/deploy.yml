name: Deploy to Production

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Upload code to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: 34.158.61.147
          username: teedineasy_team
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: ".,!node_modules,!.git,!dist"
          target: ~/teedin-backend/
          overwrite: true
          strip_components: 1

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 34.158.61.147
          username: teedineasy_team
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          timeout: 60s
          command_timeout: 10m
          script_stop: true
          script: |
            set -e

            echo ">>> Navigating to project directory..."
            cd $HOME/teedin-backend

            echo ">>> Creating .env.production if not exists..."
            if [ ! -f ".env.production" ]; then
              cp env.production.example .env.production
              echo "⚠️  Created .env.production - Please update with your actual values!"
            fi

            echo ">>> Stopping existing containers..."
            docker-compose -f docker-compose.prod.yml down || true

            echo ">>> Building Docker images..."
            docker-compose -f docker-compose.prod.yml build --no-cache

            echo ">>> Starting containers..."
            docker-compose -f docker-compose.prod.yml up -d

            echo ">>> Waiting for services to start..."
            sleep 30

            echo ">>> Checking container status..."
            docker-compose -f docker-compose.prod.yml ps
            
            echo ">>> Deployment completed!"
            echo "🎉 API is available at: http://34.158.61.147:3001"
