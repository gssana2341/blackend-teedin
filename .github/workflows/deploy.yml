name: Deploy to Production

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H 34.158.61.147 >> ~/.ssh/known_hosts

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 34.158.61.147
          username: teedineasy_team
          key_path: ~/.ssh/deploy_key
          port: 22
          timeout: 60s
          command_timeout: 10m
          script_stop: true
          script: |
            set -e

            echo ">>> Navigating to backend folder..."
            if [ ! -d "~/teedin-backend" ]; then
              git clone https://github.com/gssana2341/blackend-teedin.git ~/teedin-backend
            fi
            cd ~/teedin-backend

            echo ">>> Pulling latest code..."
            git fetch origin main
            git reset --hard origin/main

            echo ">>> Checking Docker installation..."
            if ! command -v docker &> /dev/null; then
              curl -fsSL https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
              sudo usermod -aG docker $USER
            fi

            echo ">>> Checking Docker Compose installation..."
            if ! command -v docker-compose &> /dev/null; then
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            echo ">>> Restarting containers..."
            sudo docker-compose -f docker-compose.prod.yml down || true
            sudo docker-compose -f docker-compose.prod.yml build --no-cache
            sudo docker-compose -f docker-compose.prod.yml up -d

            echo ">>> Waiting for services to start..."
            sleep 30

            echo ">>> Checking container status..."
            sudo docker-compose -f docker-compose.prod.yml ps
