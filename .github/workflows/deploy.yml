name: Deploy to Production

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Setup SSH Key
        run: |
          mkdir -p $HOME/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > $HOME/.ssh/deploy_key
          chmod 600 $HOME/.ssh/deploy_key
          ssh-keyscan -H 34.158.61.147 >> $HOME/.ssh/known_hosts
          ls -la $HOME/.ssh/
          cat $HOME/.ssh/deploy_key | head -n 1

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 34.158.61.147
          username: teedineasy_team
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          timeout: 60s
          command_timeout: 10m
          script_stop: true
          script: |
            set -e

            echo ">>> Checking Git installation..."
            if ! command -v git &> /dev/null; then
              echo "❌ Git is not installed. Please install Git first:"
              echo "Run: sudo apt update && sudo apt install -y git"
              exit 1
            fi

            echo ">>> Navigating to backend folder..."
            if [ ! -d "$HOME/teedin-backend" ]; then
              git clone https://github.com/gssana2341/blackend-teedin.git $HOME/teedin-backend
            fi
            cd $HOME/teedin-backend

            echo ">>> Pulling latest code..."
            git fetch origin main
            git reset --hard origin/main

            echo ">>> Checking Docker installation..."
            if ! command -v docker &> /dev/null; then
              echo "❌ Docker is not installed. Please install Docker first."
              exit 1
            fi

            echo ">>> Checking Docker Compose installation..."
            if ! command -v docker-compose &> /dev/null; then
              echo "❌ Docker Compose is not installed. Please install Docker Compose first."
              exit 1
            fi

            echo ">>> Creating .env.production if not exists..."
            if [ ! -f ".env.production" ]; then
              cp env.production.example .env.production
              echo "⚠️  Please update .env.production with your actual values!"
            fi

            echo ">>> Stopping existing containers..."
            docker-compose -f docker-compose.prod.yml down || true

            echo ">>> Building Docker images..."
            docker-compose -f docker-compose.prod.yml build --no-cache

            echo ">>> Starting containers..."
            docker-compose -f docker-compose.prod.yml up -d

            echo ">>> Waiting for services to start..."
            sleep 30

            echo ">>> Checking container status..."
            docker-compose -f docker-compose.prod.yml ps
            
            echo ">>> Deployment completed!"
            echo "🎉 API is available at: http://34.158.61.147:3001"
