name: Deploy to Production

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Create deployment archive
        run: |
          tar -czf deploy.tar.gz \
            --exclude='node_modules' \
            --exclude='.git' \
            --exclude='dist' \
            --exclude='.env*' \
            --exclude='.github' \
            --exclude='*.log' \
            --exclude='.next' \
            --exclude='coverage' \
            --exclude='.vscode' \
            --exclude='.idea' \
            --exclude='*.tar.gz' \
            --exclude='.DS_Store' \
            --warning=no-file-changed \
            .
          ls -lh deploy.tar.gz

      - name: Setup SSH and Deploy
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
        run: |
          # Setup SSH
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H 34.158.61.147 >> ~/.ssh/known_hosts

          # Upload code
          echo ">>> Uploading code to server..."
          scp -i ~/.ssh/deploy_key deploy.tar.gz teedineasy_team@34.158.61.147:~/

          # Deploy on server
          echo ">>> Deploying on server..."
          ssh -i ~/.ssh/deploy_key teedineasy_team@34.158.61.147 << 'EOF'
            set -e
            
            echo ">>> Extracting code..."
            cd $HOME/teedin-backend
            tar -xzf ~/deploy.tar.gz
            rm ~/deploy.tar.gz
            
            echo ">>> Creating .env.production if not exists..."
            if [ ! -f ".env.production" ]; then
              cp env.production.example .env.production
              echo "⚠️  Created .env.production - Please update with your actual values!"
            fi
            
            echo ">>> Stopping existing containers..."
            docker-compose -f docker-compose.prod.yml down || true
            
            echo ">>> Building Docker images..."
            docker-compose -f docker-compose.prod.yml build --no-cache
            
            echo ">>> Starting containers..."
            docker-compose -f docker-compose.prod.yml up -d
            
            echo ">>> Waiting for services to start..."
            sleep 30
            
            echo ">>> Checking container status..."
            docker-compose -f docker-compose.prod.yml ps
            
            echo ">>> Deployment completed!"
            echo "🎉 API is available at: http://34.158.61.147:3001"
          EOF
